
/* 
ü¶Ñü¶Ñü¶Ñ Section 3 : express.js (serving & Fetching data from)
ü¶Ñü¶Ñü¶Ñ c12. npm init, listen, get, find (Serving Products - Back End Routes)
üëâroot/package.json
üëâbackend/server.js
üëâbackend/data/data_projects.js

üçÄroot folder
npm init
npm i express

üçÄroot/package.json
 root folderÏóêÏÑú backend folderÏùò server.js Ïã§Ìñâ
 
 "start": "node backend/server"



 ü¶Ñü¶Ñü¶Ñc14. npm Nodemon, Concurrently 
    üëâpackage.json

    üçÄnpm i -D nodemon concurrently
    root folderÏóêÏÑú ÏÑ§Ïπò

    üçÄ
        "server": "nodemon backend/server",
        "client": "npm start --prefix frontend"

    üçâ
    backend/serverÏóêÏÑú nodemon Ïã§Ìñâ

    1st. frontend folder Î®ºÏ†Ä Îì§Ïñ¥Í∞ê
    2st. npm start


    üçÄconcurrently
        "dev": "concurrently \"npm run server\" \"npm run client\""

        Q: ÌîÑÎ°†Ìä∏, Î∞±ÏóîÎìú ÎëòÎã§ ÎèôÏãúÏóê Ïã§ÌñâÏãúÏºúÏïº Ìï®
        1st. run server       , 2st. run frontend


 ü¶Ñü¶Ñü¶Ñc15. npm dotenv, Environment Variables
 üëâroot/.env
 
*/

const express = require('express');

// üçÄc15. npm dotenv
const dotenv = require('dotenv')
dotenv.config()

const products = require('./data/data_products');


const app = express();

app.get('/',(req,res)=>{
    res.send('IG server-get is running');
})

app.get('/api/products',(req,res)=>{

    //üçÄ12-20. res.json(~)
    res.json(products);
})

app.get('/api/products/:id',(req,res)=>{

    //üçÄ12-30 ParamsÏÇ¨Ïö©Î≤ï - req.params.id
    const product = products.find((p) => p._id === req.params.id );
    res.json(product);
})


// üçÄc15. dotenv

const PORT = process.env.PORT || 5000;

app.listen( PORT, console.log(`IG server-listen 5000 in ${process.env.NODE_ENV} mode on port ${PORT}`) );


// app.listen(5000, console.log('IG server-listen 5000') );